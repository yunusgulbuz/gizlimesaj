Request Hash testi (hashDataV2)
paynkolay’a gönderdiğiniz her istekte ilgili hash’i de oluşturup göndermelisiniz. Hash aşağıdaki yöntemlerle hesaplanmaktadır. Size özel sx ve merchantSecretKey bilgilerinizi panelinizden alabilirsiniz.

Hash Test Formu
Aşağıdaki formu kullanarak hash hesaplama işlemini test edebilirsiniz:

SX
Enter SX
REFERENCE_CODE
Enter REFERENCE_CODE
AMOUNT
Enter AMOUNT
SUCCESS_URL
Enter SUCCESS_URL
FAIL_URL
Enter FAIL_URL
RND
Enter RND
CS_CUSTOMER_KEY*
Enter CS_CUSTOMER_KEY*
MERCHANT_SECRET_KEY
Enter MERCHANT_SECRET_KEY
Kart saklama hizmeti alınmıyorsa CS_CUSTOMER_KEY boş olacaktır.*

Hash Hesapla
Ortak Ödeme ve API’ler için Hash oluşturma
Hash değerini bize diğer parametreler ile post ettiğinizde, biz de aynı değerleri hashliyoruz. Sizin gönderdiğiniz hash ile bizim ürettiğimiz hash bir birini tutar ise, request’in sizden geldiğini teyit ediyoruz.

PHP
.NET C#
Python
Node.js
example.js
const crypto = require('crypto');

// Assuming these variables are defined elsewhere in your code
const raw = `${sx}|${full_name}|${email}|${gsm}|${amount}|${link_expiration_time}|${merchantSecretKey}`;
const hash = crypto.createHash('sha512');
hash.update(raw, 'utf8');
const HashDatav2 = hash.digest('base64');

İptal-İade servisi için Hash oluşturma
PHP
.NET C#
Python
Node.js
example.js
const crypto = require('crypto');

// Assuming these variables are defined elsewhere in your code
const raw = `${sx}|${referenceCode}|${type}|${amount}|${trxDate}|${merchantSecretKey}`;
const hash = crypto.createHash('sha512');
hash.update(raw, 'utf8');
const HashDatav2 = hash.digest('base64');

Raporlama servisi için Hash oluşturma
PHP
.NET C#
Python
Node.js
example.js
const crypto = require('crypto');

// Assuming these variables are defined elsewhere in your code
const raw = `${sx}|${startDate}|${endDate}|${clientRefCode}|${merchantSecretKey}`;
const hash = crypto.createHash('sha512');
hash.update(raw, 'utf8');
const HashDatav2 = hash.digest('base64');

Pay By Link için Hash oluşturma
PHP
.NET C#
Python
Node.js
example.js
const crypto = require('crypto');

// Assuming these variables are defined elsewhere in your code
const raw = `${sx}|${startDate}|${endDate}|${clientRefCode}|${merchantSecretKey}`;
const hash = crypto.createHash('sha512');
hash.update(raw, 'utf8');
const HashDatav2 = hash.digest('base64');

Düzenli Ödeme için Hash oluşturma
PHP
.NET C#
Python
Node.js
example.js
const crypto = require('crypto');

// Assuming these variables are defined elsewhere in your code
const raw = `${sx}|${gsm}|${amount}|${clientRefCode}|${merchantSecretKey}`;
const hash = crypto.createHash('sha512');
hash.update(raw, 'utf8');
const HashDatav2 = hash.digest('base64');

Düzenli Ödeme İptal için Hash oluşturma
PHP
.NET C#
Python
Node.js
example.js
const crypto = require('crypto');

// Assuming these variables are defined elsewhere in your code
const raw = `${sx}|${InstructionNumber}|${merchantSecretKey}`;
const hash = crypto.createHash('sha512');
hash.update(raw, 'utf8');
const HashDatav2 = hash.digest('base64');

Kayıtlı Kartlar için HashDatav2 Oluşturma
Kart Kayıt Etmek:

$hashstr = $sx."|".$cardNumber."|".$cvv."|".$merchantSecretKey;

Kayıtlı Kartları Listelemek:

$hashstr = $sx."|".$customerKey."|".$merchantSecretKey;

Kayıtlı Kartları Silmek:

$hashstr = $sx."|".$customerKey."|".$tranId."|".$token."|".$merchantSecretKey;

Saklı Karttan Ödeme Almak:

$hashstr = $sx."|".$clientRefCode."|".$amount."|".$successUrl."|".$failUrl."|".$rnd."|".$csCustomerKey."|".$merchantSecretKey;

